# NGINX Configuration for SMXKITS HLS Streaming
# This configuration sets up RTMP ingestion and HLS delivery

worker_processes auto;
error_log /var/log/nginx/error.log;

events {
    worker_connections 1024;
}

# RTMP module for receiving streams from OBS
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        allow publish all;
        
        application live {
            live on;
            
            # Enable HLS
            hls on;
            hls_path /var/www/hls;
            hls_fragment 2s;
            hls_playlist_length 300s; # 5 minutes for rewind
            
            # HLS variants for different quality levels
            hls_variant _low BANDWIDTH=400000;
            hls_variant _mid BANDWIDTH=800000;
            hls_variant _high BANDWIDTH=1200000;
            
            # Allow playback from anywhere
            allow play all;
            
            # Record streams (optional)
            record all;
            record_path /var/recordings;
            record_suffix .flv;
            record_unique on;
            
            # Notify on publish/unpublish
            on_publish http://localhost:3000/api/stream/rtmp/publish;
            on_unpublish http://localhost:3000/api/stream/rtmp/unpublish;
            
            # Security: Only allow specific stream keys (class IDs)
            # This can be enhanced with authentication
            allow publish all;
            deny publish all;
        }
    }
}

# HTTP server for serving HLS streams
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    
    # Gzip compression
    gzip on;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss;
    
    # CORS headers for HLS
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
    
    server {
        listen 8888;
        server_name localhost;
        
        # Serve HLS streams
        location /hls {
            # Serve HLS files
            alias /var/www/hls;
            
            # CORS headers
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            
            # Serve .m3u8 files with correct MIME type
            location ~ \.m3u8$ {
                add_header Cache-Control no-cache;
                add_header Content-Type application/vnd.apple.mpegurl;
            }
            
            # Serve .ts files with correct MIME type
            location ~ \.ts$ {
                add_header Cache-Control max-age=3600;
                add_header Content-Type video/mp2t;
            }
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # RTMP statistics (optional)
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }
        
        location /stat.xsl {
            root /var/www/html;
        }
    }
    
    # Proxy to Node.js application (optional)
    upstream nodejs {
        server localhost:3000;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # Serve static files
        location / {
            proxy_pass http://nodejs;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Direct access to HLS streams
        location /hls {
            proxy_pass http://localhost:8888/hls;
        }
    }
}